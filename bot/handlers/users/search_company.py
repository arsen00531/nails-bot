from aiogram import types, Dispatcher
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton
from aiogram import F
from aiogram.fsm.context import FSMContext
from bot.states import FindCompanyStates
from bot.services import yclients
import re


async def search_company_handler(message: types.Message, state: FSMContext):
    keyboard = InlineKeyboardBuilder()
    btn = InlineKeyboardButton(
        text="–í—ã—Ö–æ–¥",
        callback_data="back_to_main"
    )
    keyboard.row(btn)

    await message.answer(
        text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ <b>—Å—Ç–∞–Ω—Ü–∏—é –º–µ—Ç—Ä–æ</b>\n"
             "<i>(–Ω–∞–ø—Ä–∏–º–µ—Ä: –ú–µ–Ω–¥–µ–ª–µ–µ–≤—Å–∫–∞—è)</i>\n\n"
             "–ò–ª–∏ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ —É–ª–∏—Ü—ã</b> —Å–∞–ª–æ–Ω–∞\n"
             "<i>(–Ω–∞–ø—Ä–∏–º–µ—Ä: –¢–≤–µ—Ä—Å–∫–∞—è-–Ø–º—Å–∫–∞—è)</i>",
        reply_markup=keyboard.as_markup()
    )
    await state.set_state(FindCompanyStates.get_data)


async def get_data_handler(message: types.Message, state: FSMContext):
    await state.clear()
    response = await yclients.get_companies()
    companies = response["data"]

    match_title = [i for i in companies if re.findall(message.text, i["title"], flags=re.I)]
    match_address = [i for i in companies if re.findall(message.text, i["address"], flags=re.I)]

    if match_title:
        company = match_title[0]
    elif match_address:
        company = match_address[0]
    else:
        keyboard = InlineKeyboardBuilder()
        btn = InlineKeyboardButton(
            text="–í—ã—Ö–æ–¥",
            callback_data="back_to_main"
        )
        keyboard.row(btn)
        return await message.answer(
            text="–ù–µ –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–π —Å–∞–ª–æ–Ω.",
            reply_markup=keyboard.as_markup()
        )

    keyboard = InlineKeyboardBuilder()

    btn_1 = InlineKeyboardButton(
        text="–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É üì©",
        callback_data=f"chat_answer_to_{company['id']}"
    )
    keyboard.row(btn_1)
    btn_2 = InlineKeyboardButton(
        text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
        url="https://citynails.studio/"
    )

    web_app_info = types.WebAppInfo(url=company["bookforms"][0]["url"])
    btn_3 = InlineKeyboardButton(
        text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
        web_app=web_app_info
    )
    keyboard.row(btn_2, btn_3)

    btn = InlineKeyboardButton(
        text="–í—ã—Ö–æ–¥",
        callback_data="back_to_main"
    )
    keyboard.row(btn)

    await message.answer_venue(
        title=company["title"],
        address=company["address"],
        latitude=company["coordinate_lat"],
        longitude=company["coordinate_lon"],
        reply_markup=keyboard.as_markup()
    )


def setup(dp: Dispatcher):
    dp.message.register(search_company_handler, F.text == "–ü–æ–∏—Å–∫ üîé")
    dp.message.register(get_data_handler, FindCompanyStates.get_data)
